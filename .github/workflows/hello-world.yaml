name: Java CI
on: push
env:
  docker_username: ${{ secrets.DOCKER_USERNAME }}
  docker_password: ${{ secrets.DOCKER_PASSWORD }}
jobs:
  Clone-down:
    runs-on: ubuntu-latest
    container: gradle:6-jdk11
    steps:
      - name: checkout-step
        uses: actions/checkout@v2
      - name: upload code
        uses: actions/upload-artifact@v2
        with:
          name: code
          path: .      
  Build:
    runs-on: ubuntu-latest
    container: gradle:6-jdk11
    needs: Clone-down
    steps:
      - name: download code artifact for build
        uses: actions/download-artifact@v2
        with:
          name: code
          path: .      
      - name: build-step
        run: chmod +x ci/build-app.sh && ci/build-app.sh
      - name: upload build
        uses: actions/upload-artifact@v2
        with:
          name: build
          path: .    
  Test:
    runs-on: ubuntu-latest
    container: gradle:6-jdk11
    needs: Clone-down
    steps:
      - name: download code artifact for build test
        uses: actions/download-artifact@v2
        with:
          name: code
          path: .      
      - name: unittest-step
        run: chmod +x  ci/unit-test-app.sh && ci/unit-test-app.sh
  Docker-Image:
    runs-on: ubuntu-latest
    needs: [Build, Test]
    steps:
      - name: download build artifact for unit test
        uses: actions/download-artifact@v2
        with:
          name: build
          path: .
      - name: build docker image
        run: chmod +x ci/build-docker.sh && export GIT_COMMIT="GA-$GITHUB_SHA" && ci/build-docker.sh
      - name: push docker image
        run: chmod +x ci/push-docker.sh && export GIT_COMMIT="GA-$GITHUB_SHA" && ci/push-docker.sh
  Component-Test:
    runs-on: ubuntu-latest
    needs: Docker-Image
    steps:
      - name: download build artifact for unit test
        uses: actions/download-artifact@v2
        with:
          name: build
          path: .
      - name: component test
        run: chmod +x ci/component-test.sh && export GIT_COMMIT="GA-$GITHUB_SHA" && ci/component-test.sh